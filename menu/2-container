#!/bin/bash


CONTAINER_NAME=''



function main(){
  clear
  set_container_name
  while : ; do
    printf "\n\n[ q:exit | b:build | u:up | d:down | l:logs | e:exec | p:push | s:status ]\n\n"
    read -n1 -s
    case "$REPLY" in\
	"b") clear; docker-compose build    ;; 
	"u") clear; docker-compose up -d    ;; 
	"d") clear; docker-compose down     ;; 
	"p") clear; docker-compose push     ;; 
	"s") clear; docker-compose ps       ;; 
	"l") clear; logs                    ;; 
	"e") clear; exec                    ;; 
	"q") break                          ;; 
    esac
  done
}

function logs(){
   docker logs -f $CONTAINER_NAME
}

function exec(){
   read -p "Enter command for exec: " cmd
   docker exec -it $CONTAINER_NAME $cmd
}


function set_container_name(){
  if [ -z $CONTAINER_NAME ] && [ -f docker-compose.yml ]; then
    eval $(parse_yaml docker-compose.yml "config_")
    CONTAINER_NAME=${config_services_container_container_name[0]}
  fi
}

function parse_yaml() {
    local prefix=$2
    local s
    local w
    local fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
    awk -F"$fs" '{
      indent = length($1)/2;
      if (length($2) == 0) { conj[indent]="+";} else {conj[indent]="";}
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
              vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
              printf("%s%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, conj[indent-1],$3);
      }
    }' | sed 's/_=/+=/g'
}

main